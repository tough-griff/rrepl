#!/usr/bin/env node

const chalk = require('chalk');
const _ = require('lodash'); // eslint-disable-line import/no-extraneous-dependencies

const defaultValCb = i => i + 1;
const defaultKeyCb = c => String.fromCharCode(96 + (c + 1));

function initializeContext(ctx) {
  Object.defineProperty(ctx, '_', {
    value: _.runInContext(ctx),
  });
}

module.exports = (repl) => {
  repl.setPrompt(`${process.version} ${chalk.green('❯')} `);

  initializeContext(repl.context);
  repl.on('reset', initializeContext);

  Object.defineProperty(Array, 'toy', {
    /**
     * Generates an array of length `n` with values generated by the callback.
     * @param {number} n
     * @param {(num: number) => any} Cb
     * @returns {any[]}
     */
    value: function toy(n = 10, cb = defaultValCb) {
      return _.times(n, cb);
    },
  });

  Object.defineProperty(Object, 'toy', {
    /**
     * Generates an object with `n` key value pairs. Each key and value is
     * generated by a callback.
     * @param {number} n
     * @param {(num: number) => string} keyCb
     * @param {(num: number) => any} valCb
     * @returns {{string: any}}
     */

    value: function toy(n = 10, keyCb = defaultKeyCb, valCb = defaultValCb) {
      const keyArray = Array.toy(n, keyCb);
      const valArray = Array.toy(n, valCb);

      return _.zipObject(keyArray, valArray);
    },
  });
};
